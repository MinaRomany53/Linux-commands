https://ryanstutorials.net/linuxtutorial/

----------------------------------- Lab (2) ----------------------------------- 
- CTRL+ALT+T          // open Terminal 
- pwd                // display current location (Print Working Directory)
- ls                // list all contents in this folder
- ls -l            // with more information
- cd <pass>       // open folder
- mkdir <name> <name> <name>     // make new folder or folders   
- mkdir "Mina Romany"                   // to make any directory name with spaces use double quotes  
- mkdir .HiddenFile                     // to make any directory hidden using (.) before the name
- ls -a                                 // list all contents in this folder and hidden files  
- rmdir <name> <name> <name>    // remove folder or folders permanently
- trash <name>                 // remove folder or folders temporary
- trash-empty                 // Clean trash from all files
- mv oldname newname         // Rename the folder    
-------------------------------------------------------------------------------       



----------------------------------- Lab (3) ----------------------------------- 
- touch                                 // To Create a new File (notebad)  
- nano <filename>                       // To Create a new File (notebad) and write on it 
- cat  <filename>                       // Display the contents of the notepad
- cat > fileName then type space character                       // Delete all notepad contents
- rm                                    // Remove a file permanently  
- mv oldname newname                    // Rename the file   
- cp <copyfile> <newfilepPasted>        // Copy a file or Directory  
------------------------------------------------------------------------------- 



----------------------------------- Lab (4) ----------------------------------- 
https://www.javatpoint.com/vi-editor
https://www.guru99.com/the-vi-editor.html
https://www.tutorialspoint.com/unix/unix-vi-editor.htm

-Command mode:
* The vi editor opens in this mode, and it only understands commands
* In this mode, you can, move the cursor and cut, copy, paste the text
* This mode also saves the changes you have made to the file
* Commands are case sensitive. You should use the right letter case.

-vi Editor Insert mode:
* This mode is for inserting text in the file.
* You can switch to the Insert mode from the command mode by pressing ‘i’ on the keyboard
* Once you are in Insert mode, any key would be taken as an input for the file on which you are currently working.
* To return to the command mode and save the changes you have made you need to press the Esc key

- VI Editing commands - 
- vi <filename_NEW> or <filename_EXISTING>  // To launch the VI Editor
- i            // Insert at cursor (goes into insert mode input text)
- ESC         // goes into edit mode (Vi commands)
- ZZ         // save changes and save file
- q         // quit without save
- o         // Open a new line 
- u        // Undo last change
- U       // Undo all changes to the entire line
- dd     // Delete line
- 3dd   // Delete 3 lines
- x    // delete a single character
------------------------------------------------------------------------------- 



----------------------------------- Lab (5) ----------------------------------- 
-Wildcards (play with a set of files at once)
You can use them with any command such as ls command or rm command to list or remove files

-Three main wildcards in Linux {
    * - represents zero or more characters
    ? - represents a single character
    [] - represents a range of characters
}

--The Asterisk (*): The (*) wildcard represents any number of unknown characters. This is useful when searching for documents or files but only remembering a part of its name.
 ls t*        // list all the files names that start with the letter (t)
 ls text*    // list all the files names that start with the letter (text)
 ls *-1     // list all the files names that end with the letter (-1)


--The Question Mark (?): The (?) wildcard represents only one unknown character. This is useful when you have a list of similarly named files and unsure of a few characters.
 ls ?e*      // list all the files whose second letter is (e)
 ls ????-*  // list all the files whose have 4 letters before (-)
 ls *-?    // list all the files whose have 1 letter After (-)


--The Bracketed Characters ([ ]): The ([ ]) wildcard – the 3rd bracket and not the 1st bracket – is used to match any occurrences of characters defined inside the brackets. This option is handy when dealing with uppercase and lowercase files, as we will see later.
 ls [mt]*    // list all the files whose name either begins with a (m) or (t)
 ls *[1-9]  // list all the files whose name includes a (digit from 1 to 9)
 ls [^m-t]*  //  list all the files names that start with any character which is not one of the following
------------------------------------------------------------------------------- 



----------------------------------- Lab (6) ----------------------------------- 
--- Permissions ( Learn to identify and change the permissions of files and directories)

Linux permissions with a file (read, write, execute)
                                3 Letters to rule them all
 r read - you may view the contents of the file.
 w write - you may change the contents of the file.
 x execute - you may execute or run the file if it is a program or script.

For every file we define 3 sets of people for whom we may specify permissions.
 - owner - a single person who owns the file. (typically the person who created the file)
 - group - every file belongs to a single group.
 - others - everyone else who is not in the group or the owner.


 10 characters (-rw-rw-r--)  =>  (- rw- rw- r--)
 - First 3 characters identify the permissions for the owner
 - Second 3 characters identify the permissions for the group
 - Last 3 characters identify the permissions for the others
 --A letter represents the presence of a permission and a dash ( - ) represents the absence of permission.


- chmod (3 arguments) <fileName>      //Change file permissions 
- chmod u-r test-1  // remove read permission for user or owner
- chmod g+w test-1  // add write permission for group
- chmod o+wx test-1  // add write and execute permissions for other
- chmod a+w test-5  // add write permission for all (user , group , other)

Permissions Shorthand
- chmod 000 mina  //remove all permisons
- chmod 750 mina  // -rwxr-x---   7=>111  5=>101  0=>000
- chmod 755 mina  // -rwxr-xr-x   7=>111  5=>101  5=>101




--------------(Directories Permissions)
The same series of permissions may be used for directories but they have a slightly different behaviour.
  r - you have the ability to read the contents of the directory (ie do an ls)
  w - you have the ability to write into the directory (ie create files and directories)
  x - you have the ability to enter that directory (ie cd)

  

--------------(Filters commands)
- head           // View the first n lines of data.
- tail          // View the last n lines of data.
- sort         // Organise the data into order.
- nl          // Print line numbers before data.
- wc         // Print a count of lines, words and characters.
- cut       // Cut the data into fields and only display the specified fields.
- sed      // Do a search and replace on the data.
- uniq    // Remove duplicate lines.
- tac    // Print the data in reverse order.

------------------------------------------------------------------------------- 